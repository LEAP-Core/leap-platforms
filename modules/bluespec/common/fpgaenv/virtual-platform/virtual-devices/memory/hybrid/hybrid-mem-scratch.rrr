#include "asim/provides/scratchpad_memory.h"

// ***
// For now fix the data size at 64 bits until the RRR type system is more flexible.
// ***

service SCRATCHPAD_MEMORY
{
    server sw (cpp, method) <- hw (bsv, connection)
    {
        // Request regionWords scratchpad words for scratchpad region regionID.
        method InitRegion (in UINT32[32] regionID, in UINT32[32] regionEndIdx);

        //
        // Pipelined Load --
        //     The client hardware makes a single load request.  The host server
        //     responds with multiple messages to its LoadData client.  One
        //     message is sent for every word in a line.  The low bits of the
        //     line are sent first.
        //
        method LoadLine (in UINT64[64] addr);

        //
        // Pipelined Store --
        //     A line-sized store is pipelined.  It begins with a control message
        //     and is followed by word-sized data messages.  There is always
        //     one word message for every word in the line, even when wordMask
        //     indicates an invalid word.
        //
        //     wordMask indicates which data elements are valid and should be
        //     written.  Bit 0 of wordMask corresponds to data0.
        //
        //     Address requirements are the same as load.
        //
        method StoreCtrl (in UINT64[64] addr, in UINT8[8] wordMask);
        method StoreData (in UINT64[64] data);
    };

    server hw (bsv, connection) <- sw (cpp, method)
    {
        method LoadData (in UINT64[64] data);
    };
};
