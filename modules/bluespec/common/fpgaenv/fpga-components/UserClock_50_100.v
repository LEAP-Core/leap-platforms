//Device: xc5vlx110-1ff1153
// Generated by Xilinx Architecture Wizard
//
// Input clock = 50MHz (see CLKIN_PERIOD below)

`timescale 1ns / 1ps

module clk_50_100(CLKIN_IN,
                  RST_IN,
                  CLKIN_IBUFG_OUT,
                  CLK0_OUT,
                  CLK2X_OUT,
                  LOCKED_OUT);

   input CLKIN_IN;
   input RST_IN;
   output CLKIN_IBUFG_OUT;
   output CLK0_OUT;
   output CLK2X_OUT;
   output LOCKED_OUT;

   wire CLKFB_IN;
   wire CLKIN_IBUFG;
   wire CLK0_BUF;
   wire CLK2X_BUF;
   wire GND_BIT;
   wire [6:0] GND_BUS_7;
   wire [15:0] GND_BUS_16;

   assign GND_BIT = 0;
   assign GND_BUS_7 = 7'b0000000;
   assign GND_BUS_16 = 16'b0000000000000000;
   assign CLKIN_IBUFG_OUT = CLKIN_IBUFG;
   assign CLK0_OUT = CLKFB_IN;
//   IBUFG CLKIN_IBUFG_INST (.I(CLKIN_IN),
//                           .O(CLKIN_IBUFG));
   BUFG CLK0_BUFG_INST (.I(CLK0_BUF),
                        .O(CLKFB_IN));
   BUFG CLK2X_BUFG_INST (.I(CLK2X_BUF),
                         .O(CLK2X_OUT));
   DCM_ADV DCM_ADV_INST (.CLKFB(CLKFB_IN),
//                         .CLKIN(CLKIN_IBUFG),
                         .CLKIN(CLKIN_IN),
                         .DADDR(GND_BUS_7[6:0]),
                         .DCLK(GND_BIT),
                         .DEN(GND_BIT),
                         .DI(GND_BUS_16[15:0]),
                         .DWE(GND_BIT),
                         .PSCLK(GND_BIT),
                         .PSEN(GND_BIT),
                         .PSINCDEC(GND_BIT),
                         .RST(RST_IN),
                         .CLKDV(),
                         .CLKFX(),
                         .CLKFX180(),
                         .CLK0(CLK0_BUF),
                         .CLK2X(CLK2X_BUF),
                         .CLK2X180(),
                         .CLK90(),
                         .CLK180(),
                         .CLK270(),
                         .DO(),
                         .DRDY(),
                         .LOCKED(LOCKED_OUT),
                         .PSDONE());
   defparam DCM_ADV_INST.CLK_FEEDBACK = "1X";
   defparam DCM_ADV_INST.CLKDV_DIVIDE = 2.0;
   defparam DCM_ADV_INST.CLKFX_DIVIDE = 1;
   defparam DCM_ADV_INST.CLKFX_MULTIPLY = 4;
   defparam DCM_ADV_INST.CLKIN_DIVIDE_BY_2 = "FALSE";
   defparam DCM_ADV_INST.CLKIN_PERIOD = 20.000;
   defparam DCM_ADV_INST.CLKOUT_PHASE_SHIFT = "NONE";
   defparam DCM_ADV_INST.DCM_AUTOCALIBRATION = "TRUE";
   defparam DCM_ADV_INST.DCM_PERFORMANCE_MODE = "MAX_SPEED";
   defparam DCM_ADV_INST.DESKEW_ADJUST = "SYSTEM_SYNCHRONOUS";
   defparam DCM_ADV_INST.DFS_FREQUENCY_MODE = "LOW";
   defparam DCM_ADV_INST.DLL_FREQUENCY_MODE = "LOW";
   defparam DCM_ADV_INST.DUTY_CYCLE_CORRECTION = "TRUE";
   defparam DCM_ADV_INST.FACTORY_JF = 16'hF0F0;
   defparam DCM_ADV_INST.PHASE_SHIFT = 0;
   defparam DCM_ADV_INST.STARTUP_WAIT = "FALSE";
   defparam DCM_ADV_INST.SIM_DEVICE = "VIRTEX5";
endmodule

module mkUserClock_50_to_100(CLK, RST_N, CLK_OUT, RST_N_OUT, CLK_IBUFG_OUT);

   input CLK;
   input RST_N;
   output CLK_OUT;
   output RST_N_OUT;
   output CLK_IBUFG_OUT;
   
   wire   RST;
   
   assign RST = !RST_N;
   clk_50_100 x (.CLKIN_IN(CLK),
                 .RST_IN(RST),
                 .CLKIN_IBUFG_OUT(),
                 .CLK0_OUT(),
                 .CLK2X_OUT(CLK_OUT),
                 .LOCKED_OUT(RST_N_OUT));
endmodule
