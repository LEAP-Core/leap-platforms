
%name UNIX Pipe Physical Device
%desc UNIX Pipe Physical Device

%provides unix_pipe_device

%sources -t BSV    -v PUBLIC  unix-pipe-device.bsv
%sources -t BSV    -v PUBLIC  unix-pipe-li-device.bsv
%sources -t BDPI_H -v PUBLIC  unix-pipe-device-bdpi.h
%sources -t BDPI_C -v PRIVATE unix-pipe-device-bdpi.c
  
%sources -t LOG -v PUBLIC  unix-pipe-li-device.log

%sources -t H      -v PUBLIC  unix-pipe-device.h
%sources -t CPP    -v PRIVATE unix-pipe-device.cpp

%generated -t BA pipe_init.ba
%generated -t BA pipe_open.ba
%generated -t BA pipe_read.ba
%generated -t BA pipe_can_write.ba
%generated -t BA pipe_write.ba
%generated -t BA pipe_receive_reset.ba
%generated -t BA pipe_clear_reset.ba

%generated -t VPI_C vpi_wrapper_pipe_init.c
%generated -t VPI_C vpi_wrapper_pipe_open.c
%generated -t VPI_C vpi_wrapper_pipe_read.c
%generated -t VPI_C vpi_wrapper_pipe_can_write.c
%generated -t VPI_C vpi_wrapper_pipe_write.c
%generated -t VPI_C vpi_wrapper_pipe_receive_reset.c
%generated -t VPI_C vpi_wrapper_pipe_clear_reset.c

%generated -t VPI_H vpi_wrapper_pipe_init.h
%generated -t VPI_H vpi_wrapper_pipe_open.h
%generated -t VPI_H vpi_wrapper_pipe_read.h
%generated -t VPI_H vpi_wrapper_pipe_can_write.h
%generated -t VPI_H vpi_wrapper_pipe_write.h
%generated -t VPI_H vpi_wrapper_pipe_receive_reset.h
%generated -t VPI_H vpi_wrapper_pipe_clear_reset.h

%param SIMULATOR_ARGS  "-w"  "Simulator Args"
%param --global PLATFORM_ID     "Legacy"    "PlatformID, used in setting up i/o"
%param UNIX_DEVICE_DEBUG  0  "Should we print debug messages?"


